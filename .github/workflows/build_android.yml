name: Build Android (Crave)
on:
  workflow_dispatch:
    inputs:
      android:
        description: "Choose a ROM to build:"
        required: true
        default: "LineageOS"
        type: choice
        options:
          - "LineageOS"
          - "EvolutionX"
          - "PixelOS"
          - "RisingOS"
      removals:
        description: "Folders to be removed before syncing:"
        required: false
      device:
        description: "Device:"
        required: true
        default: "eqe"
        type: choice
        options:
          - "eqe"
      build:
        description: "Build Type:"
        required: true
        default: "user"
        type: choice
        options:
          - "eng"
          - "userdebug"
          - "user"
      clean:
        description: "Clean"
        default: false
        type: boolean
      release:
        description: "Release"
        default: false
        type: boolean
      upload:
        description: "Upload Release Assets"
        default: false
        type: boolean

jobs:
  prepare:
    name: Start Runner
    runs-on: ubuntu-latest

    steps:
      - name: Set up environment
        run: sudo apt update && sudo apt install -y tmux

      - name: Configure Crave
        run: |
          curl -s https://raw.githubusercontent.com/accupara/crave/master/get_crave.sh | bash
          sudo mv crave /usr/local/bin/crave
          echo "$CRAVE_CONF" > ${HOME}/crave.conf
        env:
          CRAVE_CONF: ${{ secrets.CRAVE_CONF }}

      - name: Run crave devspace
        run: |
          crave devspace -- "echo "Looking for runner..."
          # Look for whether there's a runner folder set up
          if [ -f actions-runner/run.sh ] ; then
            echo "Runner found! Restarting it..."
          else
            echo "Error! Runner not found!"
            exit 1
          fi

          if tmux has-session -t ghactions; then
            echo "Runner is already Running"
          else
            tmux kill-session -t ghactions;
            tmux new-session -d -s ghactions
            tmux send-keys -t ghactions 'actions-runner/run.sh' Enter
            echo "Runner Started"
          fi"

  build:
    timeout-minutes: 1440
    name: Build using Crave
    runs-on: self-hosted
    needs: prepare

    steps:
      - name: Setup Project
        run: |
          echo "project=/crave-devspaces/${{ inputs.android }}" >> "$GITHUB_ENV"
          echo $CRAVE_CONF > $HOME/crave.conf
          crave clone create --projectID 93 ${{ env.project }} || echo "Crave clone create failed!"
        env:
          CRAVE_CONF: ${{ secrets.CRAVE_CONF }}

      - name: Setup crave.yaml
        run: |
          cat << EOF > ${{ env.project }}/.repo/manifests/crave.yaml
          LOS 22.1:
            ignoreClientHostname: true
            no-patch: true
            env:
              GH_TOKEN: "${{ secrets.GH_TOKEN }}"
          EOF

      - name: Start compilation through Crave
        run: |
          cd ${{ env.project }}
          crave run -- 'curl -LSs https://raw.githubusercontent.com/${{ github.repository }}/refs/heads/main/scripts/build.sh | bash -s ${{ inputs.android }} ${{ inputs.device }} ${{ inputs.build }}'
        timeout-minutes: 1440

      - name: Pull ROM
        if: ${{ success() }}
        run: |
          cd ${{ env.project }}
          crave pull out/target/product/${{ inputs.device }}/{*.zip,boot.img,init_boot.img,vendor_boot.img,super_empty.img,recovery.img} -d ../builds/${{ inputs.android }}/${{ github.run_id }}
          rm ../builds/${{ inputs.android }}/${{ github.run_id }}/*ota* || true

      - name: Upload Artifacts
        uses: actions/upload-artifact@main
        with:
          name: ${{ inputs.android }}_${{ github.run_id }}
          path: /crave-devspaces/builds/${{ inputs.android }}/${{ github.run_id }}

      - name: Execute if the job is cancelled
        if: ${{ cancelled() }}
        run: |
          cd ${{ env.project }}
          crave stop --all

      - name: Display error.log
        if: ${{ failure() }}
        id: errorlog
        run: |
          cd ${{ env.project }}
          crave ssh -- sleep 1
          crave pull out/error.log
          echo "Displaying out/error.log"
          cat out/error.log

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: ${{ inputs.release }}

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Download all artifacts
        uses: actions/download-artifact@main
        with:
          path: artifacts

      - name: Set Release Tag and Notes
        run: |
          echo "release=${{ inputs.android }}-$(date +"%Y-%m-%d")" >> $GITHUB_ENV
          cat << EOF > release_notes.md

          Notes:
          -> Device: ${{ inputs.device }}
          -> Build Type: ${{ inputs.build }}

          Links:
          -> [Instructions](https://github.com/${{ github.repository }}/wiki/Installation-Instructions-${{ inputs.device }})
          -> [Source](https://github.com/${{ github.repository }}/blob/main/manifests/${{ inputs.device }}.xml)
          -> [Download](https://nightly.link/${{ github.repository }}/actions/runs/${{ github.run_id }}/${{ inputs.android }}_${{ github.run_id }}.zip)
          EOF

          if [[ "${{ inputs.android }}" == "LineageOS" ]]; then
            echo "-> [MindTheGapps](https://github.com/MindTheGapps/16.0.0-arm64/releases/latest)" >> release_notes.md
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ inputs.android }}
          tag_name: ${{ env.release }}
          body_path: release_notes.md

      - name: Upload Release Assets
        if: ${{ inputs.upload }}
        run: |
          for file in $(find artifacts -type f -name "*.zip" -o -name "*.img"); do
            echo "Uploading $file..."
            gh release upload "${{ env.release }}" "$file"
          done
        env:
          GH_TOKEN: ${{ github.token }}
