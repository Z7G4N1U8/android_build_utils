name: Build Kernel

on:
  push:
    paths:
      - ".github/workflows/build_kernel.yml"
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialize and Sync Kernel Source
        run: |
          sudo apt update -y && sudo apt install -y repo
          repo init --depth 1 -u https://android.googlesource.com/kernel/manifest -b common-android13-5.15
          mkdir -p .repo/local_manifests && cp manifests/kernel.xml .repo/local_manifests/default.xml
          repo sync -c --force-sync --optimized-fetch --no-tags --no-clone-bundle --prune -j$(nproc --all)

      - name: Add SukiSU
        working-directory: sm7550
        run: curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-main

      - name: Apply SUSFS Patches
        working-directory: sm7550
        run: |
          git clone https://gitlab.com/simonpunk/susfs4ksu -b gki-android13-5.15 ../susfs4ksu
          cp ../susfs4ksu/kernel_patches/fs/* fs
          cp ../susfs4ksu/kernel_patches/include/linux/* include/linux
          patch -p1 < ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-android13-5.15.patch

      - name: Add Configuration
        run: |
          cat << EOF >> sm7550/arch/arm64/configs/gki_defconfig
          # KernelSU & SUSFS
          CONFIG_KSU=y
          CONFIG_KSU_SUSFS=y
          CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n
          
          # Mountify Support
          CONFIG_TMPFS_XATTR=y
          CONFIG_TMPFS_POSIX_ACL=y
          EOF

          # Remove check_defconfig
          sed -i 's|check_defconfig||g' sm7550/build.config.gki

      - name: Remove -dirty from uname
        working-directory: sm7550
        run: sed -i 's| -dirty||g' scripts/setlocalversion

      - name: Compile Kernel
        run: LTO=thin BUILD_CONFIG=sm7550/build.config.gki.aarch64 build/build.sh

      - name: Copy Boot Image
        run: |
          mkdir artifacts && cd artifacts
          cp ../out/*/dist/boot.img Kernel_boot.img

      - name: Checkout AnyKernel
        uses: actions/checkout@v4
        with:
          repository: Kernel-SU/AnyKernel3
          path: AnyKernel

      - name: Make AnyKernel Zip
        working-directory: AnyKernel
        run: |
          sed -i 's|^kernel\.string=.*|kernel.string=Kernel by Z7G4N1U8|' anykernel.sh
          sed -i 's|^do\.devicecheck=.*|do.devicecheck=1|' anykernel.sh
          sed -i 's|^device\.name1=.*|device.name1=eqe|' anykernel.sh
          cp ../out/*/dist/Image .
          zip -r ../artifacts/Kernel_AnyKernel.zip .

      - name: Upload Artifacts
        uses: actions/upload-artifact@main
        with:
          path: artifacts

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Download all artifacts
        uses: actions/download-artifact@main
        with:
          path: artifacts

      - name: Set Release Tag and Notes
        run: |
          echo "release=kernel-$(date +"%Y-%m-%d")" >> $GITHUB_ENV
          cat << EOF > release_notes.md

          Kernel for Motorola Edge 50 Pro (eqe)

          Features:
          -> SukiSU
          -> SUSFS

          Links:
          -> [SukiSU Manager](https://github.com/SukiSU-Ultra/SukiSU-Ultra)
          -> [Kernel Flasher](https://github.com/fatalcoder524/KernelFlasher)
          -> [SUSFS Module](https://github.com/sidex15/susfs4ksu-module)
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Kernel
          tag_name: ${{ env.release }}
          body_path: release_notes.md

      - name: Upload Release Assets
        run: |
          for file in $(find artifacts -type f); do
            echo "Uploading $file..."
            gh release upload "${{ env.release }}" "$file"
          done
        env:
          GH_TOKEN: ${{ github.token }}
